@{
    ViewBag.Title = "库存明细";
    Layout = "~/Views/Shared/_LayoutLayui.cshtml";
        var printIP = System.Web.HttpContext.Current.Session["printIP"];
}
<style type="text/css">
    .layui-container {
        width: 100% !important;
    }

    .marginleft {
        margin-left: 20px;
        font-size: 16px;
    }
</style>
<input type="hidden" id="printIP" value="@printIP" />
<div class="box">
    <div class="layui-card-body layui-table-body layui-table-main">
        <div class="layui-card-body">
            <div class="layui-inline layui-show-xs-block">
                <input id="MaterialNo" class="layui-input" placeholder="物料编号">
            </div>
            <div class="layui-inline layui-show-xs-block">
                <input id="MaterialDesc" class="layui-input" placeholder="物料名">
            </div>
            <div class="layui-inline layui-show-xs-block">
                <input id="SerialNo" class="layui-input" placeholder="序列号">
            </div>
            <div class="layui-inline layui-show-xs-block">
                <input id="StrongHoldCode" class="layui-input" placeholder="据点">
            </div>
            <div class="layui-inline layui-show-xs-block">
                <input id="BatchNo" class="layui-input" placeholder="批次号">
            </div>
            <div class="layui-inline layui-show-xs-block">
                <input id="WarehouseNo" class="layui-input" placeholder="仓库号">
            </div>
            <div class="layui-inline layui-show-xs-block">
                <input id="HouseNo" class="layui-input" placeholder="库区号">
            </div>
            <div class="layui-inline layui-show-xs-block">
                <input id="AreaNo" class="layui-input" placeholder="货位号">
            </div>
            <div class="layui-inline layui-show-xs-block">
                <input id="PalletNo" class="layui-input" placeholder="托盘号">
            </div>
            <div class="layui-inline layui-show-xs-block">
                <button id="Query" class="btn btn-primary">
                    查询<i class="layui-icon layui-icon-search" style="padding-left:5px;"></i>
                </button>
            </div>
        </div>
        <table class="layui-hide" id="detailTable" lay-filter="init"></table>
        <script type="text/html" id="barDemo">
            <a class="layui-btn layui-btn-xs" lay-event="stamp">打印</a>
        </script>
    </div>
</div>

<script>
    layui.use(['laypage', 'layer', 'table'], function () {
        table = layui.table //表格
            , laypage = layui.laypage //分页
            , layer = layui.layer //弹层

        tableInit();

        //表格初始化
        function tableInit() {
            table.render({
                elem: '#detailTable'
                , height: 450
                , url: '/StockDetail/GetData' //数据接口
                , method: 'post'
                , contentType: 'application/json'
                , where: {
                    model: {
                        MaterialNo: $("#MaterialNo").val().trim(),
                        MaterialDesc: $("#MaterialDesc").val().trim(),
                        SerialNo: $("#SerialNo").val().trim(),
                        StrongHoldCode: $("#StrongHoldCode").val().trim(),
                        WarehouseNo: $("#WarehouseNo").val().trim(),
                        HouseNo: $("#HouseNo").val().trim(),
                        AreaNo: $("#AreaNo").val().trim(),
                        BatchNo: $("#BatchNo").val().trim(),
                        PalletNo: $("#PalletNo").val().trim()
                    }
                }
                , request: {
                    pageName: 'CurrentPageNumber' //页码的参数名称，默认：page
                    , limitName: 'CurrentPageShowCounts' //每页数据量的参数名，默认：limit
                }
                , response: {
                    statusCode: 1 //重新规定成功的状态码为 200，table 组件默认为 0
                }
                , parseData: function (res) { //将原始数据解析成 table 组件所规定的数据
                    return {
                        "code": res.Result, //解析接口状态
                        "msg": res.ResultValue, //解析提示文本
                        "count": res.PageData.totalCount, //解析数据长度
                        "data": res.Data //解析数据列表
                    };
                }
                , title: '库位'
                , page: true //开启分页
                , toolbar: 'false' //开启工具栏，此处显示默认图标，可以自定义模板，详见文档
                //, totalRow: true //开启合计行
                , cols: [[ //表头
                    { type: 'numbers', title: '序号', width: 60, fixed: 'left' }//序号列
                    , { field: 'SerialNo', title: '序列号', width: 120, fixed: 'left' }
                    , { field: 'Barcode', title: '条码', width: 300 }
                    , { field: 'MaterialNo', title: '物料号', width: 120, sort: true }
                    , { field: 'MaterialDesc', title: '物料名称', width: 200 }
                    , { field: 'BatchNo', title: '番号', width: 120, sort: true }
                    , { field: 'StrongHoldCode', title: '据点', width: 100 }
                    , { field: 'Unit', title: '单位', width: 80 }
                    , { field: 'Qty', title: '数量', width: 80, totalRow: true }
                    , { field: 'WarehouseNo', title: '仓库', width: 80 }
                    , { field: 'HouseNo', title: '库区', width: 80 }
                    , { field: 'AreaNo', title: '库位', width: 100 }
                    , { field: 'PalletNo', title: '托盘号', width: 100 }
                    , { field: 'StatusName', title: '状态', width: 80 }
                    , { field: 'StrIsAmount', title: '标记', width: 100 }
                    , { field: 'CreateTime', title: '时间', width: 150 }
                    , { fixed: 'right', width: 150, align: 'center', toolbar: '#barDemo' }
                ]]
            });
        }

        //监听行工具事件
        table.on('tool(init)', function (obj) {
            if (obj.event === 'stamp')
                openPostWindow($("#printIP").val() + "Main.aspx", "serialno", obj.data.SerialNo);
        });

        //分页
        laypage.render({
            elem: 'pageDemo' //分页容器的id
            , count: 100 //总页数
            , skin: '#1E9FFF' //自定义选中色值
            , jump: function (obj, first) {
                if (!first)
                    layer.msg('第' + obj.curr + '页', { offset: 'b' } );
            }
        });

        //查询
        $('#Query').click(function () {
            tableInit();
        });

        //回车事件绑定
        $("input").bind('keyup', function (event) {
            if (event.keyCode == "13")
                tableInit();
        });
    });

    function openPostWindow(url, keys, values) {
        var newWindow = window.open(url, name);
        if (!newWindow)
            return false;
        var html = "";
        html += "<html><head></head><body><form id='formid' method='post' action='" + url + "'>";
        if (keys && values) {
            html += "<input type='hidden' name='" + keys + "' value='" + values + "'/>";
        }
        html += "</form><script type='text/javascript'>document.getElementById('formid').submit();";
        html += "<\/script></body></html>".toString().replace(/^.+?\*|\\(?=\/)|\*.+?$/gi, "");
        newWindow.document.write(html);
        return newWindow;
    }
</script>









